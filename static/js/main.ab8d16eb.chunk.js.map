{"version":3,"sources":["components/users/users.jsx","index.js"],"names":["Users","useState","usuarios","setUsuarios","usuarioSelecionado","setUsuarioSelecionado","modalShow","setShowModal","modalShowReceipt","setShowModalReceipt","useEffect","axios","get","method","then","resp","data","showModalReceipt","e","$","document","ready","mask","reverse","map","u","index","className","src","alt","img","name","id","username","onClick","style","display","action","type","placeholder","required","value","card_number","cvv","expiry_date","card","substr","preventDefault","getElementById","valueInput","paymentSucces","paymentError","post","innerHTML","sendPayment","window","location","reload","ReactDOM","render","StrictMode"],"mappings":"yRAiJeA,MA1If,WAII,MAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAkDF,mBAAS,IAA3D,mBAAKG,EAAL,KAAyBC,EAAzB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAKK,EAAL,KAAgBC,EAAhB,KACA,EAA8CN,oBAAS,GAAvD,mBAAKO,EAAL,KAAuBC,EAAvB,KAGAC,qBAAU,WAENC,IAAMC,IAAI,mDAAoD,CAC1DC,OAAQ,QACTC,MAAK,SAACC,GAAUZ,EAAYY,EAAKC,WACrC,IAGH,IAMIC,EAAmB,SAACC,GACpBT,GAAoB,IA+DxB,OAPAU,IAAEC,UAAUC,OAAM,WACdF,IAAE,UAAUG,KAAK,yBAA0B,CAAEC,SAAS,OAOtD,qCACKrB,EAASsB,KAAI,SAACC,EAAGC,GACd,OACA,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKC,IAAI,GAAGC,IAAI,KAChB,qBAAKF,UAAU,iBAAiBC,IAAKH,EAAEK,IAAKD,IAAI,KAChD,sBAAKF,UAAU,aAAf,UACI,qDAAqBF,EAAEM,QACvB,qCAAQN,EAAEO,GAAV,gBAA2BP,EAAEQ,eAEjC,wBAAQ,aAAYP,EAAOQ,QAAS,SAAChB,GAAD,OAjFpDb,EAAsBH,EAiFkDwB,SAhFxEnB,GAAa,IAgFG,uBAR6B,OAAOmB,MAchD,qBAAKC,UAAU,WAAWQ,MAAO,CAACC,QAAU9B,EAAY,QAAU,QAAU4B,QAAS,kBAAM3B,GAAa,MACxG,sBAAKoB,UAAU,YAAYQ,MAAO,CAACC,QAAU9B,EAAY,QAAU,QAAnE,UACI,qBAAKqB,UAAU,cAAf,SACI,gDAAkB,+BAAOvB,EAAmB2B,YAEhD,uBAAMM,OAAO,GAAGV,UAAU,aAA1B,UACI,uBAAOI,KAAK,QAAQO,KAAK,OAAON,GAAG,QAAQO,YAAY,UAAUC,UAAQ,IACzE,yBAAQT,KAAK,OAAOC,GAAG,OAAOQ,UAAQ,EAAtC,UACI,wBAAQC,MAAM,GAAd,mCArFR,CAER,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UA2EQpB,KAAI,SAACqB,EAAMnB,GAAP,OACP,yBAAQe,MAAO,OAAOf,EAAtB,iCAAkEmB,EAAKH,YAAYI,QAAQ,KAAzD,OAAOpB,SAGjD,wBAAQC,UAAU,eAAeO,QAAS,SAAChB,GAAD,OA1ExC,SAACA,GAEfA,EAAE6B,iBAEF,IAAMF,EAAOzB,SAAS4B,eAAe,QAAQP,MACvCQ,EAAa7B,SAAS4B,eAAe,SAASP,MAC9CS,EAAgB9B,SAAS4B,eAAe,kBACxCG,EAAe/B,SAAS4B,eAAe,iBAEhC,UAATH,GAEAlC,IAAMyC,KAAK,+DAAgE,CACvE,YAAe,mBACf,IAAO,IACP,YAAe,QACf,oBAAuBhD,EAAmB4B,GAC1C,MAASiB,IAGbhC,IAEAkC,EAAaE,UAAY,KAGzBpC,IAEAiC,EAAcG,UAAY,IAgD+BC,CAAYpC,IAA7D,yBAIR,sBAAKS,UAAU,YAAYQ,MAAO,CAACC,QAAU5B,EAAmB,QAAU,QAA1E,UACI,qBAAKmB,UAAU,cAAf,SACI,sDAEJ,sBAAKA,UAAU,gBAAf,UACI,oBAAIK,GAAG,iBAAP,sDACA,oBAAIA,GAAG,gBAAP,6DACA,wBAAQE,QAtDxB,WACIqB,OAAOC,SAASC,UAqDJ,gDCnIpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAAS4B,eAAe,W","file":"static/js/main.ab8d16eb.chunk.js","sourcesContent":["import './users.css'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from \"axios\"\r\nimport $ from 'jquery'\r\nimport 'jquery-mask-plugin/dist/jquery.mask.min.js'\r\n\r\n\r\nfunction Users() {\r\n\r\n    // Declarando variáveis\r\n    // useState setando o valor inicial da variável\r\n    let [usuarios, setUsuarios] = useState([])\r\n    let [usuarioSelecionado, setUsuarioSelecionado] = useState({})\r\n    let [modalShow, setShowModal] = useState(false)\r\n    let [modalShowReceipt, setShowModalReceipt] = useState(false)\r\n\r\n    // useEffect, necessário para que o get execute apenas uma única vez\r\n    useEffect(() => {\r\n        // Função GET que está trazendo os dados da API\r\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\r\n            method: 'GET',\r\n        }).then((resp) => {setUsuarios(resp.data)})\r\n    }, [])\r\n\r\n    // Função que exibe a modal de pagamento\r\n    let showModal = (e, i) => {\r\n        setUsuarioSelecionado(usuarios[i])\r\n        setShowModal(true)\r\n    }\r\n\r\n    // Função que exibe a modal de recibo de pagamento\r\n    let showModalReceipt = (e) => {\r\n        setShowModalReceipt(true)\r\n    }\r\n\r\n    // Setando a variável array dos cartões de pagamento\r\n    let cards = [\r\n        // Cartão válido\r\n        {\r\n          card_number: '1111111111111111',\r\n          cvv: 789,\r\n          expiry_date: '01/18',\r\n        },\r\n        // Cartão inválido\r\n        {\r\n          card_number: '4111111111111234',\r\n          cvv: 123,\r\n          expiry_date: '01/20',\r\n        },\r\n    ];\r\n\r\n    // Função que envia o POST de pagamento para o endpoint\r\n    let sendPayment = (e) => {\r\n        // evento preventDefaul para não atualizar a página após a execução da função\r\n        e.preventDefault()\r\n        // Declarando variáveis\r\n        const card = document.getElementById('card').value\r\n        const valueInput = document.getElementById('valor').value\r\n        const paymentSucces = document.getElementById('payment_succes')\r\n        const paymentError = document.getElementById('payment_error')\r\n        // Se o cartão selecionado for o cartão válido, realiza o POST\r\n        if (card === 'card0') {\r\n            // Função POST está enviando os dados para o endpoint\r\n            axios.post('https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989', {\r\n                \"card_number\": '1111111111111111',\r\n                \"cvv\": 789,\r\n                \"expiry_date\": '01/18',\r\n                \"destination_user_id\": usuarioSelecionado.id,\r\n                \"value\": valueInput\r\n            })\r\n            // Exibindo a modal de recebo\r\n            showModalReceipt(true)\r\n            // Removendo o h2 de erro\r\n            paymentError.innerHTML = \"\"\r\n        } else {\r\n            // Exibindo a modal de recebo\r\n            showModalReceipt(true)\r\n            // Removendo o h2 de sucesso\r\n            paymentSucces.innerHTML = \"\"\r\n        }\r\n    }\r\n\r\n    // Função para dar refresh na página após a exibição do recibo de pagamento\r\n    function refreshPage(){\r\n        window.location.reload()\r\n    }\r\n\r\n    // Máscara jQuery para o campo 'valor'\r\n    $(document).ready(function () {\r\n        $('#valor').mask('000.000.000.000.000,00', { reverse: true });\r\n    });\r\n\r\n\r\n   // Retornando o conteúdo que será renderizado em tela\r\n   // Função map percorrendo todo o array recuperado anteriormente com o GET e listando na tela cada linha do array\r\n    return (\r\n        <>\r\n            {usuarios.map((u, index) => {\r\n                return (\r\n                <div className=\"user_container\" key={'user'+index}>\r\n                    <div className=\"user_content\">\r\n                        <img src=\"\" alt=\"\" />\r\n                        <img className=\"user_thumbnail\" src={u.img} alt=\"\"/>\r\n                        <div className=\"user_infos\">\r\n                            <p>Nome do Usuário: {u.name}</p>\r\n                            <p>ID: {u.id} - Username: {u.username}</p>\r\n                        </div>\r\n                        <button data-index={index} onClick={(e) => showModal(e, index)}>Pagar</button>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n\r\n            <div className=\"backdrop\" style={{display: (modalShow ? 'block' : 'none')}} onClick={() => setShowModal(false)}></div>\r\n            <div className=\"modal_box\" style={{display: (modalShow ? 'block' : 'none')}}>\r\n                <div className=\"modal_title\">\r\n                    <p>Pagamento para <span>{usuarioSelecionado.name}</span></p>\r\n                </div>\r\n                <form action=\"\" className=\"modal_form\">\r\n                    <input name=\"valor\" type=\"text\" id=\"valor\" placeholder=\"R$ 0,00\" required></input>\r\n                    <select name=\"card\" id=\"card\" required>\r\n                        <option value=\"\">Selecione o cartão</option>\r\n                        {cards.map((card, index) =>\r\n                            <option value={'card'+index} key={'card'+index}>Cartão com final {card.card_number.substr(-4)}</option>\r\n                        )}\r\n                    </select>\r\n                    <button className=\"modal_button\" onClick={(e) => sendPayment(e)}>Pagar</button>\r\n                </form>\r\n            </div>\r\n            \r\n            <div className=\"modal_box\" style={{display: (modalShowReceipt ? 'block' : 'none')}}>\r\n                <div className=\"modal_title\">\r\n                    <p>Recibo de pagamento</p>\r\n                </div>\r\n                <div className=\"modal_content\">\r\n                    <h2 id=\"payment_succes\">O pagamento foi concluído com sucesso</h2>\r\n                    <h2 id=\"payment_error\">O pagamento não foi concluído com sucesso</h2>\r\n                    <button onClick={refreshPage}>Concluir Transação</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// Exportando o component Users\r\nexport default Users;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css'\nimport Users from './components/users/users.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Users />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}